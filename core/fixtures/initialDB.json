[{"model": "app.lesson", "pk": 1, "fields": {"Name": " T0", "Concept": "Variables and Values", "Code": "Facility BeginToReason;\r\n    uses Integer_Ext_Theory;\r\n\r\n    Operation Main();\r\n    Procedure\r\n        Var I, J, K: Integer;\r\n\r\n        I := 2;\r\n        J := 3;\r\n\r\n        K := I;\r\n        If (J > I) then\r\n            K := J;\r\n        end;\r\n\r\n        Confirm K = /*expression*/;\r\n    end Main;\r\nend BeginToReason;", "Activity": "Please complete the Confirm assertion(s) by entering an expression for /* expression */, then check correctness.", "References": ":= is the assignment operator"}}, {"model": "app.lesson", "pk": 2, "fields": {"Name": "T1 ", "Concept": "Relating Values of Variables", "Code": "Facility BeginToReason;\r\n    uses Integer_Ext_Theory;\r\n\r\n    Operation Main();\r\n    Procedure\r\n        Var I: Integer;\r\n        Read(I);\r\n        Remember;\r\n\r\n        I := I + 1; -- Assignment\r\n\r\n        Confirm I /*conditional*/ #I;\r\n    end Main;\r\nend BeginToReason;", "Activity": "Please complete the Confirm assertion(s) by choosing a conditional operator to replace the /* conditional */, then check correctness.", "References": "At the place marked by Remember, values of variables such as I and J are assumed to be #I and #J.\r\n\r\nConditional operators are:\r\n=, <, <=, >, >="}}, {"model": "app.lesson", "pk": 3, "fields": {"Name": "T2", "Concept": "Asserting Values of Variables", "Code": "Facility BeginToReason;\r\n    uses Integer_Ext_Theory;\r\n\r\n    Operation Main();\r\n    Procedure\r\n        Var I: Integer;\r\n        Read(I);\r\n        Remember;\r\n\r\n        I := I + 1;\r\n\r\n        Confirm I = /*expression*/;\r\n    end Main;\r\nend BeginToReason;", "Activity": "Please complete the Confirm assertion(s) by entering an expression for /* expression */, then check correctness.", "References": "At the place marked by Remember, values of variables such as I and J are assumed to be #I and #J."}}, {"model": "app.lesson", "pk": 4, "fields": {"Name": "L0", "Concept": "Constants and Assignments", "Code": "Facility BeginToReason;\r\n    uses Integer_Ext_Theory;\r\n\r\n    Operation Main();\r\n    Procedure\r\n        Var I, J, K: Integer;\r\n        \r\n        I := 1;\r\n        J := 2;\r\n        K := 3;\r\n\r\n        J := I + J;\r\n        I := J - K;\r\n\r\n        Confirm I = /*expression*/;\r\n    end Main;\r\nend BeginToReason;", "Activity": "Please complete the Confirm assertion(s) and check correctness.", "References": ":= is the assignment operator"}}, {"model": "app.lesson", "pk": 5, "fields": {"Name": "L1", "Concept": "Sequence of Assignments", "Code": "Facility BeginToReason;\r\n    uses Integer_Ext_Theory;\r\n\r\n    Operation Main();\r\n    Procedure\r\n        Var I: Integer;\r\n        Read(I);\r\n        Remember;\r\n\r\n        I := I + 1;\r\n\r\n        Confirm I = /*expression*/;\r\n    end Main;\r\nend BeginToReason;", "Activity": "Please complete the Confirm assertion(s) and check correctness.", "References": ":= is the assignment operator\r\n\r\nConditional operators are\r\n=, <, <=, >, >="}}, {"model": "app.lesson", "pk": 6, "fields": {"Name": "L2", "Concept": "Sequence of Assignments", "Code": "Facility BeginToReason;\r\n    uses Integer_Ext_Theory;\r\n\r\n    Operation Main();\r\n    Procedure\r\n        Var I, J: Integer;\r\n        Read(I);\r\n        Read(J);\r\n\r\n        Remember;\r\n\r\n        I := I + 1;\r\n        J := J - 1;\r\n\r\n        Confirm I + J = /*expression*/;\r\n    end Main;\r\nend BeginToReason;", "Activity": "Please complete the Confirm assertion(s) and check correctness.", "References": "At the place marked by Remember, values of variables such as I and J are assumed to be #I and #J."}}, {"model": "app.lesson", "pk": 7, "fields": {"Name": "L3", "Concept": "Assignments with a Purpose", "Code": "Facility BeginToReason;\r\n    uses Integer_Ext_Theory;\r\n\r\n    Operation Main();\r\n    Procedure\r\n        Var I, J: Integer;\r\n        Read(I);\r\n        Read(J);\r\n\r\n        Remember;\r\n\r\n        I := I + J;\r\n        Confirm I = /* expression */;\r\n\r\n        J := I - J;\r\n        Confirm J = /* expression */;\r\n\r\n        I := I - J;\r\n        Confirm I = /* expression */;\r\n\r\n    end Main;\r\nend BeginToReason;", "Activity": "Please complete the Confirm assertion(s) and check correctness.", "References": "At the place marked by Remember, values of variables such as I and J are assumed to be #I and #J."}}, {"model": "app.lesson", "pk": 8, "fields": {"Name": "L4", "Concept": "If Statements", "Code": "Facility BeginToReason;\r\n    uses Integer_Ext_Theory;\r\n \r\n    Operation Main();\r\n    Procedure\r\n        Var I, J, K: Integer;\r\n        Read(I);\r\n        Read(J);\r\n \r\n        If I <= J then\r\n            K := I;\r\n        else\r\n            K := J;\r\n        end;\r\n \r\n        Confirm K /*conditional*/ I;\r\n        Confirm K /*conditional*/ J;\r\n    end Main;\r\nend BeginToReason;", "Activity": "Please complete the Confirm assertion(s) and check correctness.", "References": "Conditional operators are\r\n=, <, <=, >, >="}}, {"model": "app.lesson", "pk": 9, "fields": {"Name": "L5", "Concept": "If Statements", "Code": "Facility BeginToReason;\r\n    uses Integer_Ext_Theory;\r\n \r\n    Operation Main();\r\n    Procedure\r\n        Var I, J: Integer;\r\n        Read(I);\r\n \r\n        If I <= 0 then\r\n            I := - I;\r\n        end;\r\n        J := I;\r\n \r\n        Confirm J /*conditional*/ /*expression*/;\r\n    end Main;\r\nend BeginToReason;", "Activity": "Please complete the Confirm assertion(s) and check correctness.", "References": "Conditional operators are\r\n=, <, <=, >, >="}}, {"model": "app.lesson", "pk": 10, "fields": {"Name": "L6", "Concept": "If Statements", "Code": "Facility BeginToReason;\r\n    uses Integer_Ext_Theory;\r\n \r\n    Operation Main();\r\n    Procedure\r\n        Var I, J, K: Integer;\r\n        Read(I);\r\n        Read(J);\r\n \r\n        K := J;\r\n        If I >= K then\r\n            K := I;\r\n        end;\r\n \r\n        Confirm K /*conditional*/ I;\r\n        Confirm K /*conditional*/ J;\r\n    end Main;\r\nend BeginToReason;", "Activity": "Please complete the Confirm assertion(s) and check correctness.", "References": "Conditional operators are\r\n=, <, <=, >, >="}}, {"model": "app.lesson", "pk": 11, "fields": {"Name": "L7", "Concept": "If Statements", "Code": "Facility BeginToReason;\r\n    uses Integer_Ext_Theory;\r\n \r\n    Operation Main();\r\n    Procedure\r\n        Var I, J: Integer;\r\n        Read(I);\r\n \r\n        If I >= 0 then\r\n            J := - I;\r\n        else\r\n            J := I;\r\n        end;\r\n \r\n        Confirm J /*conditional*/ /*expression*/;\r\n    end Main;\r\nend BeginToReason;", "Activity": "Please complete the Confirm assertion(s) and check correctness.", "References": "At the place marked by Remember, values of variables such as I and J are assumed to be #I and #J.\r\n\r\nConditional operators are\r\n=, <, <=, >, >="}}, {"model": "app.lesson", "pk": 12, "fields": {"Name": "L8", "Concept": "Multiple If Statements", "Code": "Facility BeginToReason;\r\n    uses Integer_Ext_Theory;\r\n \r\n    Operation Main();\r\n    Procedure\r\n        Var I, J, K: Integer;\r\n        Read(I);\r\n        Read(J);\r\n        Read(K);\r\n \r\n        Remember;\r\n \r\n        If I <= K then\r\n            K := I;\r\n        end;\r\n        If J <= K then\r\n            K := J;\r\n        end;\r\n \r\n        Confirm K /*conditional*/ #I;\r\n        Confirm K /*conditional*/ #J;\r\n        Confirm K /*conditional*/ #K;\r\n    end Main;\r\nend BeginToReason;", "Activity": "Please complete the Confirm assertion(s) and check correctness.", "References": "At the place marked by Remember, values of variables such as I and J are assumed to be #I and #J.\r\n\r\nConditional operators are\r\n=, <, <=, >, >="}}, {"model": "app.lesson", "pk": 13, "fields": {"Name": "C1", "Concept": "Loop Statement", "Code": "Facility BeginToReason;\r\n    uses Integer_Ext_Theory;\r\n\r\n    Operation Main();\r\n    Procedure\r\n        Var I, J, K: Integer;\r\n        Read(I);\r\n        Read(J);\r\n        Read(K);\r\n\r\n        Remember;\r\n\r\n        If I <= K then\r\n            While (I /= K)\r\n                changing I; -- only I is changed in the loop\r\n                decreasing K + (-I); -- reason for loop termination\r\n            do\r\n                I := I + 1;\r\n            end;\r\n\r\n            Confirm I /* conditional */ K;\r\n        end;\r\n    end Main;\r\nend BeginToReason;\r\n", "Activity": "Please complete the Confirm assertion(s) and check correctness.", "References": "changing statement - contains a list of variables whose values are changed by execution of the loop body\r\n\r\ndecreasing expression - an expression whose value decreases after each pass through the loop body"}}, {"model": "app.lesson", "pk": 14, "fields": {"Name": "C2", "Concept": "Multiple Loop Statements", "Code": "Facility BeginToReason;\r\n    uses Integer_Ext_Theory;\r\n\r\n    Operation Main();\r\n    Procedure\r\n        Var I, J, K: Integer;\r\n        Read(I);\r\n        Read(J);\r\n        Read(K);\r\n\r\n        Remember;\r\n\r\n        If I <= K then\r\n            While (I /= K)\r\n                changing I;\r\n                decreasing K + (-I);\r\n            do\r\n                I := I + 1;\r\n            end;\r\n\r\n        else\r\n            While (I /= K)\r\n                changing I;\r\n                decreasing I;\r\n            do\r\n                I := I - 1;\r\n            end;\r\n        end;\r\n\r\n        Confirm I = /* expression */;\r\n    end Main;\r\nend BeginToReason;", "Activity": "Please complete the Confirm assertion(s) and check correctness.", "References": "changing statement - contains a list of variables whose values are changed by execution of the loop body\r\n\r\ndecreasing expression - an expression whose value decreases after each pass through the loop body"}}]